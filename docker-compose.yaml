version: "3"


services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  postgresdb:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=devpass
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  web:
    env_file:
      - ./project/.env
    restart: always
    volumes:
      - ./project:/project
    build:
      context: ./project
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgresdb

  worker-beat:
    env_file:
      - ./project/.env
    restart: always
    volumes:
      - ./project:/project
    build:
      context: ./project
      dockerfile: Dockerfilecelery
    command: [ "celery","-A","config" ,"beat" ]
    depends_on:
      - postgresdb
      - redis
      - web

  worker:
    env_file:
      - ./project/.env
    restart: always
    volumes:
      - ./project:/project
    build:
      context: ./project
      dockerfile: Dockerfilecelery
    command: [ "celery","-A","config" ,"worker", "-l" ,"INFO" ]
    depends_on:
      - postgresdb
      - redis
      - web
      - worker-beat

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    depends_on:
      - postgresdb
      - web
    ports:
      - "80:80"
    volumes:
      - ./project/static/:/static

  telegram:
    environment:
      - TELEGRAM_TOKEN=5438953231:AAFJs5SIkjOrA_5N2183FIA74TNBy7dNxPI
    build:
      context: ./docker/telegram
      dockerfile: Dockerfile
    command: python3 main.py
